#include <stdio.h>
#include <stdlib.h>

// Define the Node structure
typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;

// Function to create a new node
Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}


// Function to insert a node into the tree
Node* insert(Node* root, int data) {
    if (root == NULL) {
        return createNode(data);
    }

    if (data <= root->data) {
        root->left = insert(root->left, data);
    } else {
        root->right = insert(root->right, data);
    }

    return root;
}

void inOrder(Node* root, int k1, int k2){
  if(root==NULL){
    return;
  }
  
  inOrder(root->left, k1, k2);
  if(root->data >= k1 && root->data <= k2){
   		printf("%d ", root->data);
  }
  inOrder(root->right, k1, k2);
}

int main() {
    int t, data;
    int k1,k2;
    
    Node* root = NULL;

    scanf("%d", &t);
    
    for (int i = 0; i < t; i++) {
            scanf("%d", &data);
            root = insert(root, data);
        }
        scanf("%d %d", &k1,&k2);
        inOrder(root, k1, k2);
    return 0;
}
