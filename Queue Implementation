#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 10000

typedef struct Queue {
    int data[MAX_SIZE];
    int front;
    int rear;
} Queue;

// Function to initialize the queue
void initQueue(Queue* q) {
    q->front = -1;
    q->rear = -1;
}

// Function to check if the queue is empty
bool isEmpty(Queue* q) {
    return q->front == -1;
}

// Function to check if the queue is full
bool isFull(Queue* q) {
    return q->rear == MAX_SIZE - 1;
}

// Function to enqueue an element
void enqueue(Queue* q, int val) {
    if (isFull(q)) {
        return;
    }
    q->data[++(q->rear)] = val;
    if (q->front == -1) {
        q->front = 0;
    }
}

// Function to dequeue an element
int dequeue(Queue* q) {
    if (isEmpty(q)) {
        return -1;
    }
    int val = q->data[(q->front)++];
    if (q->front > q->rear) {  // Reset queue when empty
        q->front = -1;
        q->rear = -1;
    }
    return val;
}

int front(Queue* q){
    return q->data[q->front];
}




int main() {
    Queue q;
    initQueue(&q);
   
    enqueue(&q, 10);
    enqueue(&q, 20);
    enqueue(&q, 30);
    dequeue(&q);
    printf("%d", front(&q));

    return 0;
}
