#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#define MAX 100

typedef struct Stack {
    char arr[MAX];
    int top;
} Stack;

void initStack(Stack* stack) {
    stack->top = -1;
}

void push(Stack* stack, char val) {
    if (stack->top < MAX - 1) {
        stack->arr[++stack->top] = val;
    }
}

char pop(Stack* stack) {
    if (stack->top == -1) {
        return '\0';
    }
    return stack->arr[stack->top--];
}

bool isEmpty(Stack* stack) {
    return stack->top == -1;
}

int main() {
    char s[MAX];
    scanf("%s", s);
   
    Stack stack;
    initStack(&stack);
   
    for (int i = 0; s[i] != '\0'; i++) {
        char c = s[i];
        if (c == '(' || c == '{' || c == '[') {
            push(&stack, c);
        } else {
            if (isEmpty(&stack)) {
                printf("Not Balanced");
                return 0;
            }
            char top = pop(&stack);
            if ((c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '[')) {
                printf("Not Balanced");
                return 0;
            }
        }
    }
   
    printf(isEmpty(&stack) ? "Balanced" : "Not Balanced");
    return 0;
}
