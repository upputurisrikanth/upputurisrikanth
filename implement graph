/*#include <stdio.h>

int main(){
	int sun,mon,tue,wed,thu,fri,sat;
	scanf("%d%d%d%d%d%d%d", &sun,&mon,&tue,&wed,&thu,&fri,&sat);
	
	int m = mon * 100;
	int t = tue * 100;
	int w = wed * 100;
	int t1 = thu * 100;
	int f = fri * 100;
	
	
	if(mon - 8 > 0) {
		m = (mon - 8)*15 + m;
	}
	
	if(tue - 8 > 0) {
		t = (tue - 8)*15 + t;
	}
	
	if(wed - 8 > 0) {
		w = (wed - 8)*15 + w;
	}
	
	if(thu - 8 > 0) {
		t1 = (thu - 8)*15 + t1;
	}
	
	if(fri - 8 > 0) {
		f = (fri - 8)*15 + f;
	}
	
	int s = sat * 125;
	int s1 = sun * 150;
	int sum = m + t+ w+ t1+f+s+s1;
	printf("%d", sum);
	return 0;
	
}*/



/*#include <stdio.h>
int main(){
	int year, month;
	int days;
	scanf("%d %d", &year, &month);
	
	if(year >= 1900 || year <= 9999){
		if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12){
			days = 365 / 12 + 1;
		} else if(month == 2 && (year % 4 != 0 || year % 400 != 0)){
			days = 365 / 12 - 2;
		}
		else if(month == 2 && (year % 4 == 0 || year % 400 == 0)){
			days = 365 / 12 - 1;
		}
		 else if(month == 4 || month == 6 || month == 9 || month == 11){
			days = 365 / 12;
		}else {
			printf("0 Days");
		}
	}
	printf("%d", days);
return 0;
	
}

#include <stdio.h>
int main(){
	int n;
	scanf("%d", &n);
	
	int v = n * ((n - 1)/2);
	printf("%d", v);
	return 0;
}*/

#include <stdio.h>
#include <string.h>

int main(){
	int node;
	int edge;
	char ch[100];
	int arr[100][100];
	printf("Please enter the number of nodes in the graph\n");
	scanf("%d", &node);
	printf("Please enter the number of edges in the graph\n");
	scanf("%d", &edge);
	printf("Is the graph directed\n");
	scanf("%s", ch);
	printf("Adjacency Matrix Representation:\n");
	for(int i = 0; i <= node-1;i++){
		for(int j = 0; j <= node-1; j++){
			arr[i][j] = 0;
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}
	

	
    for (int i = 0; i < edge; i++) {
        int start, end, weight;
        printf("Enter the start node, end node and weight of edge no %d\n", i + 1);
        scanf("%d %d %d", &start, &end, &weight);

        arr[start - 1][end - 1] = weight;

        if (strcmp(ch, "no") == 0) {
            arr[end - 1][start - 1] = weight;
        }
    }
    
    printf("Adjacency Matrix Representation:\n");
	for(int i = 0; i <= node-1;i++){
		for(int j = 0; j <= node-1; j++){
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}

	
	return 0;
}
